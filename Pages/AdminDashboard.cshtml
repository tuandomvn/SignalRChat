@page
@using SignalRChat.Models
@model AdminDashboardModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="container mt-4">
    <h2>Admin Dashboard</h2>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Total Agents</h5>
                    <p class="card-text display-4">@Model.TotalAgents</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Available Agents</h5>
                    <p class="card-text display-4">@Model.AvailableAgents</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Active Chats</h5>
                    <p class="card-text display-4">@Model.ActiveChats</p>
                </div>
            </div>
        </div>
    </div>

    @foreach (var team in Model.Teams)
    {
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    @team.Name
                    <span class="badge bg-secondary ms-2">@team.Shift</span>
                </h5>
                <div>
                    @if (team.ShiftStartTime != default && team.ShiftEndTime != default)
                    {
                        <span class="badge bg-info">@team.ShiftStartTime.ToString("hh\\:mm") - @team.ShiftEndTime.ToString("hh\\:mm")</span>
                    }
                    @if (team.IsActive)
                    {
                        <span class="badge bg-success">Active</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Inactive</span>
                    }
                </div>
            </div>
            <div class="card-body">
                <p class="card-text">@team.Description</p>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Agent Name</th>
                                <th>Seniority</th>
                                <th>Status</th>
                                <th>Current Chats</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var agent in team.Agents)
                            {
                                <tr>
                                    <td>@agent.Name</td>
                                    <td>
                                        <span class="badge @(agent.Seniority switch {
                                            AgentSeniority.TeamLead => "bg-danger",
                                            AgentSeniority.Senior => "bg-warning",
                                            AgentSeniority.MidLevel => "bg-info",
                                            _ => "bg-secondary"
                                        })">
                                            @agent.Seniority
                                        </span>
                                    </td>
                                    <td>
                                        @if (agent.IsAvailable)
                                        {
                                            <span class="badge bg-success">Available</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Unavailable</span>
                                        }
                                    </td>
                                    <td>
                                        @{
                                            var agentChats = Model.GetAgentActiveChats(agent.AgentId);
                                            foreach (var chat in agentChats)
                                            {
                                                <div class="badge bg-primary me-1">@chat.UserId</div>
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Auto refresh the page every 30 seconds
        setTimeout(function() {
            location.reload();
        }, 30000);
    </script>
} 